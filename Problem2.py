# Even Fibonacci numbers
# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

stack = [1, 2]
newLast = 2
total = 0
current = 0


while newLast < 4000000:
    lastNumber = stack.pop().__int__()
    nextLastNumber = stack.pop().__int__()
    newLast = lastNumber + nextLastNumber
    stack.append(nextLastNumber)
    stack.append(lastNumber)
    stack.append(newLast)

stack.pop()
print stack

while stack != []:
    current = stack.pop().__int__()
    if current % 2 == 0:
        total += current

print stack
print total




